// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Moneyon.PowerBi.Infrastructure.Migrations
{
    [DbContext(typeof(PowerBiContext))]
    [Migration("20240106132003_purches03")]
    partial class purches03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.OTP", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OTPs");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Package", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AllowdUserCount")
                        .HasColumnType("int");

                    b.Property<string>("Descreption")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermisionId")
                        .HasColumnType("int");

                    b.Property<long?>("ReportId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique()
                        .HasFilter("[ReportId] IS NOT NULL");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Purches", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PackageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PackageId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Purches");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PackageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchesId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PackageId");

                    b.HasIndex("PurchesId")
                        .IsUnique()
                        .HasFilter("[PurchesId] IS NOT NULL");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<string>("BlockReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Blocked")
                        .HasColumnType("bigint");

                    b.Property<int?>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountGroupId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountGroupId = 5L,
                            Balance = 0L,
                            Blocked = 0L,
                            Key = 1,
                            Name = "کیف پول",
                            OwnerId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AccountGroupId = 2L,
                            Balance = 0L,
                            Blocked = 0L,
                            Key = 1001,
                            Name = "حساب بانک",
                            OwnerId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            AccountGroupId = 8L,
                            Balance = 0L,
                            Blocked = 0L,
                            Key = 4000,
                            Name = "درآمدها",
                            OwnerId = 1L
                        });
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.AccountGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("HasDebitNature")
                        .HasColumnType("bit");

                    b.Property<int?>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("AccountGroups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            HasDebitNature = true,
                            Key = 1000,
                            Name = "دارایی‌ها"
                        },
                        new
                        {
                            Id = 2L,
                            HasDebitNature = true,
                            Key = 1001,
                            Name = "‌دارایی‌های جاری",
                            ParentId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            HasDebitNature = false,
                            Key = 2000,
                            Name = "‌بدهی‌ها"
                        },
                        new
                        {
                            Id = 4L,
                            HasDebitNature = false,
                            Key = 2001,
                            Name = "‌بدهی‌های جاری",
                            ParentId = 3L
                        },
                        new
                        {
                            Id = 5L,
                            HasDebitNature = false,
                            Key = 2002,
                            Name = "‌‌کیف پول اشخاص",
                            ParentId = 3L
                        },
                        new
                        {
                            Id = 6L,
                            HasDebitNature = false,
                            Key = 2003,
                            Name = "تجمیع ‌‌سرمایه پروژه‌ها",
                            ParentId = 3L
                        },
                        new
                        {
                            Id = 7L,
                            HasDebitNature = false,
                            Key = 3000,
                            Name = "‌حقوق صاحبان سهام"
                        },
                        new
                        {
                            Id = 8L,
                            HasDebitNature = false,
                            Key = 4001,
                            Name = "‌درآمدها"
                        });
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddressValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PersonId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PackageId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PackageId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComputedColumnSql("Case  when [FirstName] is null and [LastName] is null then [MobileNumber] else [FirstName]+' '+[LastName] end");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = new Guid("54e2c6ad-b374-4b81-a6ce-710b72998859"),
                            DisplayName = "0912000000",
                            Email = "MEHRTA@LIVE.COM",
                            FirstName = "پلتفرم",
                            LastName = " ",
                            MobileNumber = "0912000000",
                            NationalCode = "1234567890"
                        });
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("SecurityCode")
                        .HasColumnType("bigint");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.TransactionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountBalance")
                        .HasColumnType("bigint");

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("Credit")
                        .HasColumnType("bigint");

                    b.Property<long>("Debit")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionDetails");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.UsersToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsExpire")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersTokens");
                });

            modelBuilder.Entity("PackagesPermissions", b =>
                {
                    b.Property<long>("PackagesId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReportsId")
                        .HasColumnType("bigint");

                    b.HasKey("PackagesId", "ReportsId");

                    b.HasIndex("ReportsId");

                    b.ToTable("PackagesPermissions");
                });

            modelBuilder.Entity("RolesPermissions", b =>
                {
                    b.Property<long>("PermissionsId")
                        .HasColumnType("bigint");

                    b.Property<long>("RolesId")
                        .HasColumnType("bigint");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("RolesPermissions");
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.Property<long>("RolesId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.OTP", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.User", "User")
                        .WithMany("OTPs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Permission", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Report", "Report")
                        .WithOne("Permission")
                        .HasForeignKey("Moneyon.PowerBi.Domain.Model.Modeling.Permission", "ReportId");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Purches", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Person", "Owner")
                        .WithMany("Purches")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.Navigation("Owner");

                    b.Navigation("Package");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Subscription", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Person", "Owner")
                        .WithMany("Subscription")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Package", "Package")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PackageId");

                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Purches", "Purches")
                        .WithOne("Subscription")
                        .HasForeignKey("Moneyon.PowerBi.Domain.Model.Modeling.Subscription", "PurchesId");

                    b.Navigation("Owner");

                    b.Navigation("Package");

                    b.Navigation("Purches");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.User", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Moneyon.PowerBi.Domain.Model.Modeling.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Account", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.AccountGroup", "Group")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Person", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.AccountGroup", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.AccountGroup", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Address", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.City", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Payment", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Person", "Owner")
                        .WithMany("Payment")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.Navigation("Owner");

                    b.Navigation("Package");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Province", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.TransactionDetail", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Account", "Account")
                        .WithMany("TransactionDetails")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Modeling.Transaction", "Transaction")
                        .WithMany("Details")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.UsersToken", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.User", "User")
                        .WithMany("Token")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PackagesPermissions", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Permission", null)
                        .WithMany()
                        .HasForeignKey("ReportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolesPermissions", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moneyon.PowerBi.Domain.Model.Modeling.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Package", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Purches", b =>
                {
                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.Report", b =>
                {
                    b.Navigation("Permission")
                        .IsRequired();
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Model.Modeling.User", b =>
                {
                    b.Navigation("OTPs");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Account", b =>
                {
                    b.Navigation("TransactionDetails");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.AccountGroup", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Person", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Addresses");

                    b.Navigation("Payment");

                    b.Navigation("Purches");

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Moneyon.PowerBi.Domain.Modeling.Transaction", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
